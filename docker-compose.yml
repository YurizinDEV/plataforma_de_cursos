services:
  mongo:
    container_name: plataforma-cursos-db
    image: mongo:8
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: mongod --replSet rs0 --bind_ip_all --quiet --logpath /dev/null
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

  api:
    container_name: plataforma-cursos-api
    build: .
    environment:
      - DB_URL=mongodb://mongo:27017/plataforma?replicaSet=rs0
    ports:
      - "5010:5010"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    restart: always

volumes:
  mongo-data: